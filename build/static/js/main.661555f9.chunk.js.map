{"version":3,"sources":["nordicenergy_logo_bw_black.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","marks","makeStyles","theme","root","width","margin","height","spacing","value","label","marksUseCases","StakedTokensSlider","withStyles","color","padding","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","track","rail","opacity","mark","markActive","markLabel","Slider","Login","result","state","isGenesisPhase","stakedTokens","tokenPrice","nodeCategory","txNumber","txCost","circulatingSuply","percentageCirculatingSuply","parseFloat","normalResult","useCases","genesisPhaseCheckboxState","percentageMark","apiData","handleChange","bind","handleCheckboxChange","handleStakedTokensSlider","handleUseCasesSlider","handlePercentageCirculatingSuplySlider","fetch","then","res","json","data","setState","processDataFromApi","catch","console","log","this","market_data","current_price","usd","toFixed","circulating_supply","setPercentageMark","evt","target","name","checkDisableGenesisPhase","newTxNumber","className","src","logo","aria-label","defaultValue","valueLabelDisplay","min","max","step","onChange","Input","type","id","checked","disabled","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","activeBoxShadow","href","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,wD,mSCkBrCC,GATYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,KAETC,OAAQ,CACNC,OAAQJ,EAAMK,QAAQ,QAIZ,CACZ,CACEC,MAAO,EACPC,MAAO,KAET,CACED,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,GACPC,MAAO,QAET,CACED,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAGT,CACEA,MAAO,GACPC,MAAO,QAET,CACED,MAAO,IAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,IACPC,MAAO,QAET,CACED,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,IACPC,MAAO,QAET,CACED,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,KAET,CACEA,MAAO,IACPC,MAAO,UAILC,EAAgB,CACpB,CACEF,MAAO,EACPC,MAAO,KAET,CACED,MAAO,GAET,CACEA,MAAO,GAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IAET,CACEA,MAAO,IACPC,MAAO,QAMLE,EAAqBC,YAAW,CACpCT,KAAM,CACJU,MAAO,UACPP,OAAQ,EACRQ,QAAS,UAEXC,MAAO,CACLT,OAAQ,GACRF,MAAO,GACPY,gBAAiB,OACjBC,OAAQ,oBACRC,WAAY,GACZC,YAAa,GACb,2BAA4B,CAC1BC,UAAW,YAGfC,OAAQ,GACRC,MAAO,CACLhB,OAAQ,EACRU,gBAAiB,WAEnBO,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","file":"static/js/main.661555f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nordicenergy_logo_bw_black.00208750.png\";","import React, {Component} from 'react';\nimport {Input} from 'reactstrap';\nimport './App.css';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport logo from './nordicenergy_logo_bw_black.png';\nimport Switch from \"react-switch\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300,\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nconst marks = [\n  {\n    value: 0,\n    label: '0',\n  },\n  {\n    value: 10\n  },\n  {\n    value: 20\n  },\n  {\n    value: 30\n  },\n  {\n    value: 40,\n    label: '100k',\n  },\n  {\n    value: 50\n  },\n  {\n    value: 60\n  },\n  {\n    value: 70\n  },\n\n  {\n    value: 80,\n    label: '200k',\n  },\n  {\n    value: 90\n  },\n  {\n    value: 100\n  },\n  {\n    value: 110\n  },\n  {\n    value: 120,\n    label: '300k',\n  },\n  {\n    value: 130\n  },\n  {\n    value: 140\n  },\n  {\n    value: 150\n  },\n  {\n    value: 160,\n    label: '400k',\n  },\n  {\n    value: 170\n  },\n  {\n    value: 180\n  },\n  {\n    value: 190\n  },\n  {\n    value: 200,\n    label: '500k',\n  },\n];\n\nconst marksUseCases = [\n  {\n    value: 2,\n    label: '2',\n  },\n  {\n    value: 5\n  },\n  {\n    value: 8\n  },\n  {\n    value: 12\n  },\n  {\n    value: 16\n  },\n  {\n    value: 20\n  },\n  {\n    value: 24\n  },\n  {\n    value: 28\n  },\n  {\n    value: 32\n  },\n  {\n    value: 36,\n  },\n  {\n    value: 40\n  },\n  {\n    value: 44\n  },\n  {\n    value: 48\n  },\n  {\n    value: 52\n  },\n  {\n    value: 56\n  },\n  {\n    value: 60\n  },\n  {\n    value: 64\n  },\n  {\n    value: 68\n  },\n  {\n    value: 72\n  },\n  {\n    value: 76\n  },\n  {\n    value: 80\n  },\n  {\n    value: 84\n  },\n  {\n    value: 88\n  },\n  {\n    value: 92\n  },\n  {\n    value: 96\n  },\n  {\n    value: 100,\n    label: '100',\n  },\n];\n\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst StakedTokensSlider = withStyles({\n  root: {\n    color: '#E6B800',\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    height: 30,\n    width: 30,\n    backgroundColor: '#fff',\n    border: '5px solid #E6B800',\n    marginTop: -12,\n    marginLeft: -14,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  track: {\n    height: 6,\n    backgroundColor: '#e6b800',\n  },\n  rail: {\n    height: 6,\n    opacity: 0.3,\n    backgroundColor: '#e6b800',\n  },\n  mark: {\n    backgroundColor: '#e6b800',\n    height: 6,\n    width: 1,\n    marginTop: 6,\n\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: '#e6b800',\n  },\n  markLabel: {\n    marginTop: 10\n  }\n})(Slider);\n\nfunction valuetext(value) {\n  return `${value}k`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\n\nclass Login extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      stakedTokens: 1000,\n      tokenPrice: 0.1,\n      useCases: 2,\n      txNumber: 40000,\n      txCost: 0.01,\n      nodeCategory: 1.0,\n      isGenesisPhase: false,\n      genesisPhaseCheckboxState: true,\n      circulatingSuply: 0,\n      percentageCirculatingSuply: 50,\n      percentageMark: [],\n      apiData:[]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.handleStakedTokensSlider = this.handleStakedTokensSlider.bind(this);\n    this.handleUseCasesSlider = this.handleUseCasesSlider.bind(this);\n    this.handlePercentageCirculatingSuplySlider = this.handlePercentageCirculatingSuplySlider.bind(this)\n\n  }\n  componentDidMount() {\n    fetch('1609f116-a205-42f9-80b8-32a99fa17a6b')\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ apiData: data }, () => this.processDataFromApi() )\n        })\n        .catch(console.log)\n  }\n\n  processDataFromApi(){\n\n    this.setState({ tokenPrice: (this.state.apiData.market_data.current_price.usd).toFixed(3) });\n    this.setState({ circulatingSuply: (this.state.apiData.market_data.circulating_supply).toFixed(0) }, () => this.setPercentageMark() )\n\n  }\n\n  setPercentageMark(){\n\n    this.setState({\n\n      percentageMark: [\n        {\n          value: 4,\n          label: (this.state.circulatingSuply *0.02 / 1000).toFixed(0)+\"Net\",\n        },\n        {\n          value: 10\n        },\n        {\n          value: 20\n        },\n        {\n          value: 30\n        },\n        {\n          value: 40,\n        },\n        {\n          value: 50\n        },\n        {\n          value: 60\n        },\n        {\n          value: 70\n        },\n\n        {\n          value: 80,\n        },\n        {\n          value: 90\n        },\n        {\n          value: 100\n        },\n        {\n          value: 110\n        },\n        {\n          value: 120,\n        },\n        {\n          value: 130\n        },\n        {\n          value: 140\n        },\n        {\n          value: 150\n        },\n        {\n          value: 160,\n        },\n        {\n          value: 170\n        },\n        {\n          value: 180\n        },\n        {\n          value: 190\n        },\n        {\n          value: 200,\n          label: (this.state.circulatingSuply / 1000000).toFixed(2)+\"M Net\",\n        },\n      ]\n    })\n\n\n  }\n  result = () => {\n    if (this.state.isGenesisPhase == true) {\n      return (this.state.stakedTokens * this.state.tokenPrice * 0.1 * this.state.nodeCategory / 365);\n    }\n    return (this.state.txNumber * this.state.txCost / (this.state.circulatingSuply * this.state.percentageCirculatingSuply / 100) * this.state.stakedTokens * 0.6 * parseFloat(this.state.nodeCategory));\n  };\n\n  normalResult = () => {\n    return (this.state.txNumber * this.state.txCost / (this.state.circulatingSuply * this.state.percentageCirculatingSuply / 100) * this.state.stakedTokens * 0.6 * parseFloat(this.state.nodeCategory));\n  };\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ [evt.target.name]: evt.target.value }, () => this.checkDisableGenesisPhase());\n    if (evt.target.name == \"useCases\") {\n      let newTxNumber = evt.target.value * 20000;\n      this.setState({ \"txNumber\": newTxNumber }, () => this.checkDisableGenesisPhase());\n    }\n\n  }\n\n  checkDisableGenesisPhase() {\n\n    if ((this.normalResult() * 365) > (this.state.tokenPrice * this.state.stakedTokens * 0.1 * this.state.nodeCategory )) {\n      this.setState({ \"genesisPhaseCheckboxState\": true });\n      this.setState({ \"isGenesisPhase\": false });\n    }\n    else {\n      this.setState({ \"genesisPhaseCheckboxState\": false });\n    }\n\n  }\n\n  handleCheckboxChange(evt) {\n    this.setState({ \"isGenesisPhase\": evt });\n  }\n\n  handleStakedTokensSlider(evt, value) {\n    this.setState({ \"stakedTokens\": value * 2500 });\n  }\n\n  handlePercentageCirculatingSuplySlider(evt, value) {\n    this.setState({ \"percentageCirculatingSuply\": (value * 0.5).toFixed(1) }, () => this.checkDisableGenesisPhase()) ;\n  }\n\n  handleUseCasesSlider(evt, value) {\n    let newTxNumber = value * 20000;\n    this.setState({ \"useCases\": value });\n    this.setState({ \"txNumber\": newTxNumber }, () => this.checkDisableGenesisPhase());\n  }\n\n\n  render() {\n    const classes = makeStyles(theme => ({\n      root: {\n        width: 300,\n      },\n      margin: {\n        height: theme.spacing(3),\n      },\n    }));\n    return (\n        <div className='container'>\n          <div className='content'>\n\n            <div className='imageContainer'>\n              <img className='nordicenergylogoImage' src={logo} />\n              <span>\n\n              </span>\n            </div>\n            <div className=\"userInputContainer\">\n              <div className='textFormPairContainer'>\n                <p >My Staked Tokens</p>\n                <p className=\"netAmmount\">{this.state.stakedTokens + \"K NET\"}</p>\n                <StakedTokensSlider className=\"stakedTokensSlider\"\n                                    name=\"stakedTokens\"\n                                    aria-label=\"discrete-slider-small-steps\"\n                                    defaultValue={1}\n                                    marks={marks}\n                                    valueLabelDisplay=\"off\"\n                                    min={0}\n                                    max={200}\n                                    step={1}\n                                    onChange={this.handleStakedTokensSlider}\n                />\n              </div>\n              <div className='textFormPairContainer'>\n                <p >Use Cases</p>\n                <p className=\"netAmmount\">{this.state.useCases}</p>\n                <StakedTokensSlider\n                    name=\"useCases\"\n                    aria-label=\"discrete-slider-small-steps\"\n                    defaultValue={1}\n                    marks={marksUseCases}\n                    valueLabelDisplay=\"off\"\n                    min={2}\n                    max={100}\n                    step={1}\n                    onChange={this.handleUseCasesSlider}\n                />\n              </div>\n              <div className='textFormPairContainer'>\n                <p >Total Staked Tokens / Circulating Supply</p>\n                <p className=\"netAmmount\">{this.state.percentageCirculatingSuply + \"%\"}</p>\n                <StakedTokensSlider className=\"stakedTokensSlider\"\n                                    name=\"stakedTokens\"\n                                    aria-label=\"discrete-slider-small-steps\"\n                                    defaultValue={100}\n                                    marks={this.state.percentageMark}\n                                    valueLabelDisplay=\"off\"\n                                    min={4}\n                                    max={200}\n                                    step={1}\n                                    onChange={this.handlePercentageCirculatingSuplySlider}\n                />\n              </div>\n              <div className='textFormPairContainer'>\n                <p>Node Type</p>\n                <Input type=\"select\" name=\"nodeCategory\" id=\"nodeCategorySelect\" className='inputContainer' onChange={this.handleChange} >\n                  <option value=\"1\">Node</option>\n                  <option value=\"2\">Trust Node</option>\n                  <option value=\"1.2\">Nordic Energy Pool Staking 1 Month</option>\n                  <option value=\"1.4\">Nordic Energy Pool Staking 3 Months</option>\n                  <option value=\"1.6\">Nordic Energy Pool Staking 6 Months</option>\n                  <option value=\"1.8\">Nordic Energy Pool Staking 12 Months</option>\n                </Input>\n              </div>\n\n              <div className='textFormPairContainer'>\n                <p>Average Number of Transactions / Day</p>\n                <Input type=\"number\" name=\"txNumber\" step=\"1000\" className='inputContainer' value={this.state.txNumber} onChange={this.handleChange} />\n              </div>\n\n              <div className='textFormPairContainer'>\n                <p>Nordic Energy Token Price (USD)</p>\n                <Input type=\"number\" name=\"tokenPrice\"  step=\"0.1\" className='inputContainer' value={this.state.tokenPrice} onChange={this.handleChange} />\n              </div>\n\n              <div className='textFormPairContainer'>\n                <label>Activate Genesis Phase</label>\n                <Switch\n                    name=\"isGenesisPhase\"\n                    checked={this.state.isGenesisPhase}\n                    onChange={this.handleCheckboxChange}\n                    disabled={this.state.genesisPhaseCheckboxState}\n                    onColor=\"#E6B800\"\n                    onHandleColor=\"#E6B800\"\n                    handleDiameter={28}\n                    uncheckedIcon={false}\n                    checkedIcon={false}\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                    height={15}\n                    width={50}\n                    className=\"react-switch\"\n                    id=\"material-switch\"\n                />\n              </div>\n\n            </div>\n            <div className='resultingIncomeContainer'>\n              <p>Resulting Income</p>\n              <p>{(this.result()).toFixed(2) + \"$\"}/day</p>\n              <p>{(this.result() * 30).toFixed(2) + \"$\"}/month</p>\n              <p>{(this.result() * 365).toFixed(2) + \"$\"}/year</p>\n              <p>{(this.result() * 365 / this.state.tokenPrice / this.state.stakedTokens * 100).toFixed(2) + \"%\"} - Annual Staking Rate</p>\n              <p>{(this.state.tokenPrice * this.state.stakedTokens).toFixed(2) + \"$\"} - My Nordic Energy Token value</p>\n            </div>\n            <div className='optionalInformationContainer'>\n              <a href=\"https://blog.nordicenergy.info\">Blog</a>\n              <a href=\"https://github.com/nordicenergy/staking-calculator/\">GitHub Link</a>\n              <a href=\"https://etherscan.io/address/0x163e6936bcBbFf19ab70d1E5083FEB4507E96EFB\">Donate 1 NET</a>Y\n\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\n\nfunction App() {\n  return (new Login()\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}